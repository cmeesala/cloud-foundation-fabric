# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: cloud-function-module-(v-2)
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Cloud Function Module (v2)
    source:
      sourceType: git
      repo: github.com/cmeesala/cloud-foundation-fabric.git
      dir: modules/cloud-function-v2
    version: 42.0.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.11.4"
    description: {}
  content: {}
  interfaces:
    variables:
      - name: bucket_config
        description: Enable and configure auto-created bucket. Set fields to null to use defaults.
        varType: |-
          object({
              force_destroy             = optional(bool)
              lifecycle_delete_age_days = optional(number)
              location                  = optional(string)
            })
      - name: bucket_name
        description: Name of the bucket that will be used for the function code. It will be created with prefix prepended if bucket_config is not null.
        varType: string
        required: true
      - name: build_environment_variables
        description: A set of key/value environment variable pairs available during build time.
        varType: map(string)
        defaultValue: {}
      - name: build_service_account
        description: Build service account email.
        varType: string
      - name: build_worker_pool
        description: Build worker pool, in projects/<PROJECT-ID>/locations/<REGION>/workerPools/<POOL_NAME> format.
        varType: string
      - name: bundle_config
        description: Cloud function source. Path can point to a GCS object URI, or a local path. A local path to a zip archive will generate a GCS object using its basename, a folder will be zipped and the GCS object name inferred when not specified.
        varType: |-
          object({
              path = string
              folder_options = optional(object({
                archive_path = optional(string)
                excludes     = optional(list(string))
              }), {})
            })
        required: true
      - name: description
        description: Optional description.
        varType: string
        defaultValue: Terraform managed.
      - name: docker_repository_id
        description: User managed repository created in Artifact Registry.
        varType: string
      - name: environment_variables
        description: Cloud function environment variables.
        varType: map(string)
        defaultValue:
          LOG_EXECUTION_ID: "true"
      - name: function_config
        description: Cloud function configuration. Defaults to using main as entrypoint, 1 instance with 256MiB of memory, and 180 second timeout.
        varType: |-
          object({
              binary_authorization_policy = optional(string)
              entry_point                 = optional(string, "main")
              instance_count              = optional(number, 1)
              memory_mb                   = optional(number, 256) # Memory in MB
              cpu                         = optional(string, "0.166")
              runtime                     = optional(string, "python310")
              timeout_seconds             = optional(number, 180)
            })
        defaultValue:
          cpu: "0.166"
          entry_point: main
          instance_count: 1
          memory_mb: 256
          runtime: python310
          timeout_seconds: 180
      - name: iam
        description: IAM bindings for topic in {ROLE => [MEMBERS]} format.
        varType: map(list(string))
        defaultValue: {}
      - name: ingress_settings
        description: Control traffic that reaches the cloud function. Allowed values are ALLOW_ALL, ALLOW_INTERNAL_AND_GCLB and ALLOW_INTERNAL_ONLY .
        varType: string
      - name: kms_key
        description: Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources in key id format. If specified, you must also provide an artifact registry repository using the docker_repository_id field that was created with the same KMS crypto key.
        varType: string
      - name: labels
        description: Resource labels.
        varType: map(string)
        defaultValue: {}
      - name: name
        description: Name used for cloud function and associated resources.
        varType: string
        required: true
      - name: prefix
        description: Optional prefix used for resource names.
        varType: string
      - name: project_id
        description: Project id used for all resources.
        varType: string
        required: true
      - name: region
        description: Region used for all resources.
        varType: string
        required: true
      - name: secrets
        description: Secret Manager secrets. Key is the variable name or mountpoint, volume versions are in version:path format.
        varType: |-
          map(object({
              is_volume  = bool
              project_id = string
              secret     = string
              versions   = list(string)
            }))
        defaultValue: {}
      - name: service_account
        description: Service account email. Unused if service account is auto-created.
        varType: string
      - name: service_account_create
        description: Auto-create service account.
        varType: bool
        defaultValue: false
      - name: trigger_config
        description: Function trigger configuration. Leave null for HTTP trigger.
        varType: |-
          object({
              event_type   = string
              pubsub_topic = optional(string)
              region       = optional(string)
              event_filters = optional(list(object({
                attribute = string
                value     = string
                operator  = optional(string)
              })), [])
              service_account_email  = optional(string)
              service_account_create = optional(bool, false)
              retry_policy           = optional(string, "RETRY_POLICY_DO_NOT_RETRY") # default to avoid permadiff
            })
      - name: vpc_connector
        description: VPC connector configuration. Set create to 'true' if a new connector needs to be created.
        varType: |-
          object({
              create          = optional(bool, false)
              name            = optional(string)
              egress_settings = optional(string)
            })
        defaultValue: {}
      - name: vpc_connector_config
        description: VPC connector network configuration. Must be provided if new VPC connector is being created.
        varType: |-
          object({
              ip_cidr_range = string
              network       = string
              instances = optional(object({
                max = optional(number)
                min = optional(number, 2)
              }))
              throughput = optional(object({
                max = optional(number, 300)
                min = optional(number, 200)
              }))
            })
    outputs:
      - name: bucket
        description: Bucket resource (only if auto-created).
      - name: bucket_name
        description: Bucket name.
      - name: function
        description: Cloud function resources.
      - name: function_name
        description: Cloud function name.
      - name: id
        description: Fully qualified function id.
      - name: invoke_command
        description: Command to invoke Cloud Run Function.
      - name: service_account
        description: Service account resource.
      - name: service_account_email
        description: Service account email.
      - name: service_account_iam_email
        description: Service account email.
      - name: trigger_service_account
        description: Service account resource.
      - name: trigger_service_account_email
        description: Service account email.
      - name: trigger_service_account_iam_email
        description: Service account email.
      - name: uri
        description: Cloud function service uri.
      - name: vpc_connector
        description: VPC connector resource if created.
